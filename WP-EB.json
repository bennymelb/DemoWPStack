{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Demo wordpress frontend",
    "Parameters": {
        "Environment": {
            "Description": "Indicate this is a Dev/QA/Staging/Prod environment",
            "Type": "String",
            "Default": "Dev",
            "AllowedValues": [
                "Dev",
                "QA",
                "Staging",
                "Prod"
            ],
            "ConstraintDescription": "Environment value must be either Dev, QA, Staging or Prod"
        },
        "ServiceName": {
            "Description": "Name of the service thats going to run in this VPC",
            "Type": "String",
            "Default": "Demo-WP"
        },
        "NetworkStackName": {
            "Description": "Name of the CF stack that contains the network info",
            "Type": "String",
            "MinLength" : 1,
            "MaxLength" : 255,
            "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",            
            "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
        },
        "EBSG": {
            "Description": "The ID of the EB instance SG for allowing access to RDS",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "AppBucket": {
            "Description": "Name of the S3 bucket that contain your app artifact",
            "Type": "String",
            "MinLength" : 6,
            "MaxLength" : 63,
            "AllowedPattern" : "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "ConstraintDescription" : "A Bucket's name must be between 6 and 63 characters long, containing lowercase characters, numbers, periods, and dashes. It must start with a lowercase letter or number. Bucket names cannot contain underscores, end with a dash, have consecutive periods, or use dashes adjacent to periods"
        },
        "App": {
            "Description": "Name of the application software package e.g. sampleapp.zip",
            "Type": "String",
            "MinLength": 1
        },
        "ASGMinSize" : {
            "Description": "ASG Min size",
            "Type" : "String",
            "Default": "2"
        },
        "ASGMaxSize" : {
            "Description": "ASG Max size",
            "Type" :"String",
            "Default": "4"
        },
        "InstanceType": {
            "Description" : "EC2 instance type",
            "Type" : "String",
            "Default" : "t1.micro",
            "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
            "ConstraintDescription" : "Must be a valid EC2 instance type."
        },
        "EC2KeyPair": {
            "Description": "EC2 Key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "EC2IAMRole": {
            "Description": "IAM role for the EC2 instance",
            "Type": "String"
        },
        "RDSEndPoint": {
            "Description": "The RDS endpoint",
            "Type":"String"
        },
        "RDSPort": {
            "Description": "The RDS port e.g. 3306",
            "Type": "String",
            "Default": "3306"
        },
        "DBName": {
            "Description": "The name of the database",
            "Type": "String"
        },
        "DBUsername": {
            "Description": "The username to connection to the database server",
            "Type": "String"
        },
        "DBPassword": {
            "Description": "The password to connection to the database server",
            "Type": "String",
            "NoEcho" : "true"
        },
        "AlertSNSTopic": {
            "Description": "The ARN of the SNS Topic for any EB alert",
            "Type": "String"
        },
        "AUTHKEY": {
            "Description": "AUTH_KEY",
            "Type":"String"
        },
        "AUTHSALT": {
            "Description": "AUTH_SALT",
            "Type":"String"
        },
        "LOGGEDINKEY": {
            "Description": "LOGGED_IN_KEY",
            "Type":"String"
        },
        "LOGGEDINSALT": {
            "Description": "LOGGED_IN_SALT",
            "Type":"String"
        },
        "NONCEKEY": {
            "Description": "NONCE_KEY",
            "Type":"String"
        },
        "NONCESALT": {
            "Description": "NONCE_SALT",
            "Type":"String"
        },
        "SECUREAUTHKEY": {
            "Description": "SECURE_AUTH_KEY",
            "Type":"String"
        },
        "SECUREAUTHSALT": {
            "Description": "SECURE_AUTH_SALT",
            "Type":"String"
        }         
    },
    "Metadata": {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
                {
                    "Label" : { "default" : "Environment" },
                    "Parameters" : [ "Environment", "ServiceName" ]
                },
                {
                    "Label" : { "default" : "Network Configuration" },
                    "Parameters" : [ "NetworkStackName", "EBSG" ]
                },
                {
                    "Label" : { "default" : "Application configuration" },
                    "Parameters" : [ "AppBucket" , "App" ]
                },
                {
                    "Label" : { "default" : "Auto scaling configuration" },
                    "Parameters" : [ "ASGMinSize" , "ASGMaxSize" ]
                },
                {
                    "Label" : { "default": "Instance configuration" },
                    "Parameters" : [ "InstanceType" , "EC2KeyPair", "EC2IAMRole" ]
                },
                {
                    "Label" : { "default" : "Database configuration" },
                    "Parameters" : [ "RDSEndPoint", "RDSPort", "DBName", "DBUsername", "DBPassword" ]
                },
                {
                    "Label" : { "default" : "Notification configuration" },
                    "Parameters" : [ "AlertSNSTopic" ]
                },
                {
                    "Label" : { "default" : "PHP Environment Variable" },
                    "Parameters" : [ "AUTHKEY", "AUTHSALT", "LOGGEDINKEY", "LOGGEDINSALT", "NONCEKEY", "NONCESALT", "SECUREAUTHKEY", "SECUREAUTHSALT" ]
                }
            ]
        }
    },
    "Resources": {
        "EBServiceRole":{
            "Type": "AWS::IAM::Role",
            "Properties": {
               "AssumeRolePolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [ "elasticbeanstalk.amazonaws.com" ]
                     },
                     "Action": [ "sts:AssumeRole" ],
                     "Condition": {
                        "StringEquals": {
                          "sts:ExternalId": "elasticbeanstalk"
                        }
                      }
                  } ]
               },               
               "Policies": [ {
                  "PolicyName": {"Fn::Sub": "${AWS::StackName}-EB-Service-Policy" },
                  "PolicyDocument": {
                     "Version" : "2012-10-17",
                     "Statement": [ {
                        "Effect": "Allow",
                        "Action": [
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInstanceStatus",
                            "ec2:GetConsoleOutput",
                            "ec2:AssociateAddress",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeSecurityGroups",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeAutoScalingInstances",
                            "autoscaling:DescribeScalingActivities",
                            "autoscaling:DescribeNotificationConfigurations"
                          ],
                          "Resource": [
                            "*"
                          ]
                     } ]
                  }
                } ]
            }
        },
        "EBApplication": {
            "Type": "AWS::ElasticBeanstalk::Application",
            "Properties": {
                "ApplicationName" : {"Ref": "ServiceName"},
                "Description": "Demo wordpress"
            }
        },
        "EBApplicationVersion": {
            "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
            "Properties": {
                "ApplicationName": { "Ref": "EBApplication" },
                "Description":  {"Ref": "ServiceName" },
                "SourceBundle": {
                    "S3Bucket": { "Ref" : "AppBucket" },
                    "S3Key": {"Ref": "App"}
                }
            }
        },
        "EBConfigTemplate": {
            "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
            "Properties": {
                "ApplicationName": { "Ref": "EBApplication" },
                "Description": { "Fn::Join": [ "", [ {"Ref": "ServiceName" }, " Configuration Template" ] ] },
                "OptionSettings": [
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "EnvironmentType",
                        "Value": "LoadBalanced"
                    },          
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "ServiceRole",
                        "Value": {"Ref": "EBServiceRole"}
                    },          
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MinSize",
                        "Value": {"Ref": "ASGMinSize"}
                    },
                    {
                        "Namespace": "aws:autoscaling:asg",
                        "OptionName": "MaxSize",
                        "Value": {"Ref":"ASGMaxSize"}
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": { "Ref": "InstanceType" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "EC2KeyName",
                        "Value": { "Ref": "EC2KeyPair" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": { "Ref": "EC2IAMRole" }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": { "Fn::Join": [ ",", [ {"Ref": "EBSG" }, { "Fn::ImportValue" :  { "Fn::Sub": "${NetworkStackName}-LinuxSGID" } } ] ] }                        
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SSHSourceRestriction",
                        "Value": "tcp, 22, 22, 210.11.132.138/32"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:sns:topics",
                        "OptionName": "Notification Topic ARN",
                        "Value": {"Ref": "AlertSNSTopic"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "RDS_HOSTNAME",
                        "Value": {"Ref": "RDSEndPoint"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "RDS_PORT",
                        "Value": {"Ref": "RDSPort"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "RDS_DB_NAME",
                        "Value": {"Ref": "DBName"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "RDS_USERNAME",
                        "Value": {"Ref": "DBUsername"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "RDS_PASSWORD",
                        "Value": {"Ref": "DBPassword"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "AUTH_KEY",
                        "Value": {"Ref": "AUTHKEY"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "AUTH_SALT",
                        "Value": {"Ref": "AUTHSALT"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LOGGED_IN_KEY",
                        "Value": {"Ref": "LOGGEDINKEY"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "LOGGED_IN_SALT",
                        "Value": {"Ref": "LOGGEDINSALT"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "NONCE_KEY",
                        "Value": {"Ref": "NONCEKEY"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "NONCE_SALT",
                        "Value": {"Ref": "NONCESALT"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "SECURE_AUTH_KEY",
                        "Value": {"Ref": "SECUREAUTHKEY"}
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "SECURE_AUTH_SALT",
                        "Value": {"Ref": "SECUREAUTHSALT"}
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateEnabled",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "RollingUpdateType",
                        "Value": "Health"
                    },
                    {
                        "Namespace": "aws:autoscaling:updatepolicy:rollingupdate",
                        "OptionName": "MinInstancesInService",
                        "Value": "1"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:command",
                        "OptionName": "DeploymentPolicy",
                        "Value": "RollingWithAdditionalBatch"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:command",
                        "OptionName": "BatchSize",
                        "Value": "30"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VPCId",
                        "Value": { "Fn::ImportValue" :  { "Fn::Sub": "${NetworkStackName}-VPCID" } }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "AssociatePublicIpAddress",
                        "Value": "true"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": { "Fn::Join" : [ ",", [ {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-ExtSubnetAID"}}, {"Fn::ImportValue" :  {"Fn::Sub": "${NetworkStackName}-ExtSubnetBID"}}, {"Fn::ImportValue":  {"Fn::Sub": "${NetworkStackName}-ExtSubnetCID"}} ] ] }       
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "ELBSubnets",
                        "Value": {"Fn::Join": [",", [{"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-ExtSubnetAID"}}, {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-ExtSubnetBID"}}, {"Fn::ImportValue": {"Fn::Sub": "${NetworkStackName}-ExtSubnetCID"}}]]}   
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                        "OptionName": "SystemType",
                        "Value": "enhanced"
                    }
                ],
                "SolutionStackName": "64bit Amazon Linux 2017.03 v2.5.0 running PHP 7.1"
            }
        },
        "EBEnvironment": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "Properties": {
                "ApplicationName": { "Ref": "EBApplication" },
                "Description": { "Fn::Join": [ "-", [ {"Ref": "ServiceName" }, {"Ref":"Environment"} ] ] },
                "TemplateName": { "Ref": "EBConfigTemplate" },
                "VersionLabel": { "Ref": "EBApplicationVersion" }
            }
        }                        
    },
    "Outputs": {
        "StackName": {
            "Description": "The name of the stack",
            "Value": {"Ref": "AWS::StackName" },
            "Export": {
                "Name": {"Ref": "AWS::StackName" }
            }
        },
        "StackId": {
            "Description": "The ID of the stack",
            "Value": {"Ref": "AWS::StackId" }            
        },
        "StackEBEndpoint": {
            "Description" : "The Beanstalk enpoint",
            "Value" : {"Fn::GetAtt": ["EBEnvironment", "EndpointURL"]}, 
            "Export" : {
                "Name" : {"Fn::Sub": "${AWS::StackName}-EBEndpoint" }
            }
        }
    }
}